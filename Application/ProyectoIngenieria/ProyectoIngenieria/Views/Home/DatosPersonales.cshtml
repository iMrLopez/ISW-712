@model ProyectoIngenieria.Models.Aspirante

@{
    ViewBag.Title = "Datos Personales";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<div class="container-fluid">
    <div class="row">
        <div class="col-md-12">
            <div class="card">
                <div class="bannerprincipal card-header">
                    <h4 class="title">Datos Personales</h4>
                </div>
                <div class="card-content">
                    @using (Html.BeginForm())
                    {
                        @Html.AntiForgeryToken()
                        <div class="row">
                            <div class="col-md-3">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.Cedula, htmlAttributes: new { @class = "control-label", @for = "inputid" })
                                    @Html.EditorFor(model => model.Cedula, new { htmlAttributes = new { @class = "form-control", @id = "inputid", @placeholder = "101110111" } })
                                    @Html.ValidationMessageFor(model => model.Cedula, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="col-md-3">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.Nombre, htmlAttributes: new { @class = "control-label", @for = "inputNombre" })
                                    @Html.EditorFor(model => model.Nombre, new { htmlAttributes = new { @class = "form-control", @id = "inputNombre", @placeholder = "Nombre Completo" } })
                                    @Html.ValidationMessageFor(model => model.Nombre, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="col-md-3">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.Apellido1, htmlAttributes: new { @class = "control-label", @for = "inputApellido1" })
                                    @Html.EditorFor(model => model.Apellido1, new { htmlAttributes = new { @class = "form-control", @id = "inputApellido1", @placeholder = "Primer Apellido" } })
                                    @Html.ValidationMessageFor(model => model.Apellido1, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="col-md-3">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.Apellido2, htmlAttributes: new { @class = "control-label", @for = "inputApellido2" })
                                    @Html.EditorFor(model => model.Apellido2, new { htmlAttributes = new { @class = "form-control", @id = "inputApellido2", @placeholder = "Segundo Apellido" } })
                                    @Html.ValidationMessageFor(model => model.Apellido2, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-md-3">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.Genero, htmlAttributes: new { @class = "control-label", @for = "inputDireccion" })
                                    @Html.DropDownListFor(m => m.Provincia, new SelectList(Enum.GetValues(typeof(Genero))), new { @class = "form-control", @id = "inputProvincia" })
                                    @Html.ValidationMessageFor(model => model.Genero, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="col-md-3">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.FechaNacimiento, htmlAttributes: new { @class = "control-label", @for = "inputDireccion" })
                                    @Html.EditorFor(model => model.FechaNacimiento, new { htmlAttributes = new { @class = "form-control", @id = "inputDireccion", @placeholder = "Direccion", @type = "date" } })
                                    @Html.ValidationMessageFor(model => model.FechaNacimiento, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.Direccion, htmlAttributes: new { @class = "control-label", @for = "inputDireccion" })
                                    @Html.EditorFor(model => model.Direccion, new { htmlAttributes = new { @class = "form-control", @id = "inputDireccion", @placeholder = "Direccion" } })
                                    @Html.ValidationMessageFor(model => model.Direccion, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-md-4">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.Provincia, htmlAttributes: new { @class = "control-label", @for = "inputProvincia" })
                                    @Html.DropDownListFor(m => m.Provincia, new SelectList(Enum.GetValues(typeof(Provincia))), new { @class = "form-control", @id = "inputProvincia" })
                                </div>
                            </div>
                            <div class="col-md-4">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.Canton, htmlAttributes: new { @class = "control-label", @for = "inputCanton" })
                                    @Html.DropDownListFor(m => m.Canton, new SelectList(Enum.GetValues(typeof(Canton))), new { @class = "form-control", @id = "inputCanton" })
                                </div>
                            </div>
                            <div class="col-md-4">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.Distrito, htmlAttributes: new { @class = "control-label", @for = "inputDistrito" })
                                    @Html.DropDownListFor(m => m.Distrito, new SelectList(Enum.GetValues(typeof(Distrito))), new { @class = "form-control", @id = "inputDistrito" })
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-md-6">
                                <div class="form-group">
                                    <button type="submit" class="btnprincipal btn  pull-right">
                                        Siguente
                                    </button>
                                </div>
                            </div>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
</div>

